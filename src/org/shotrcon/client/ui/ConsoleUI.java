package org.shotrcon.client.ui;

import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.JTextPane;
import javax.swing.text.AttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;

/**
 *
 * @author shotbygun
 */
public abstract class ConsoleUI extends javax.swing.JFrame {

    /**
     * Creates new form ConsoleUI
     */
    public ConsoleUI() {
        initComponents();
        this.setTitle("ShotRcon");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPane = new javax.swing.JPanel();
        ipTextField = new javax.swing.JTextField();
        portTextField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        toggleConnect = new javax.swing.JButton();
        botPane = new javax.swing.JPanel();
        inputTextField = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        consoleTextPane = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ipTextField.setText("ip address");
        ipTextField.setToolTipText("");
        ipTextField.setMinimumSize(new java.awt.Dimension(40, 18));
        ipTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ipTextFieldFocusGained(evt);
            }
        });
        topPane.add(ipTextField);

        portTextField.setText("port");
        portTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                portTextFieldFocusGained(evt);
            }
        });
        topPane.add(portTextField);

        passwordField.setText("password");
        passwordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordFieldFocusGained(evt);
            }
        });
        topPane.add(passwordField);

        toggleConnect.setText("Connect");
        toggleConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleConnectActionPerformed(evt);
            }
        });
        topPane.add(toggleConnect);

        inputTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputTextFieldKeyPressed(evt);
            }
        });

        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout botPaneLayout = new javax.swing.GroupLayout(botPane);
        botPane.setLayout(botPaneLayout);
        botPaneLayout.setHorizontalGroup(
            botPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botPaneLayout.createSequentialGroup()
                .addComponent(inputTextField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sendButton))
        );
        botPaneLayout.setVerticalGroup(
            botPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botPaneLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(botPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendButton))
                .addContainerGap())
        );

        consoleTextPane.setFocusable(false);
        jScrollPane2.setViewportView(consoleTextPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(botPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(topPane, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(topPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        onSend();
    }//GEN-LAST:event_sendButtonActionPerformed

    private void inputTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputTextFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            onSend();
        
        if(evt.getKeyCode() == KeyEvent.VK_UP)
            onUpArrow();
        
        if(evt.getKeyCode() == KeyEvent.VK_DOWN)
            onDownArrow();
    }//GEN-LAST:event_inputTextFieldKeyPressed

    private void toggleConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleConnectActionPerformed
        onToggleConnect();
    }//GEN-LAST:event_toggleConnectActionPerformed

    private void ipTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ipTextFieldFocusGained
        ipTextField.selectAll();
    }//GEN-LAST:event_ipTextFieldFocusGained

    private void portTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_portTextFieldFocusGained
        portTextField.selectAll();
    }//GEN-LAST:event_portTextFieldFocusGained

    private void passwordFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFieldFocusGained
        passwordField.selectAll();
    }//GEN-LAST:event_passwordFieldFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel botPane;
    private javax.swing.JTextPane consoleTextPane;
    private javax.swing.JTextField inputTextField;
    private javax.swing.JTextField ipTextField;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField portTextField;
    private javax.swing.JButton sendButton;
    private javax.swing.JButton toggleConnect;
    private javax.swing.JPanel topPane;
    // End of variables declaration//GEN-END:variables

    
    // Events to implement
    protected abstract void onSend();
    protected abstract void onToggleConnect();
    protected abstract void onUpArrow();
    protected abstract void onDownArrow();
    
    
    /**
     * Created by nice cow http://stackoverflow.com/users/1057230/nice-cow
     * source http://stackoverflow.com/a/9652143/1362478
     * @param textPane 
     * @param message
     * @param color 
     */
    protected void appendToPane(JTextPane textPane, String message, Color color) {
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, color);

        aset = sc.addAttribute(aset, StyleConstants.FontFamily, "Lucida Console");
        aset = sc.addAttribute(aset, StyleConstants.Alignment, StyleConstants.ALIGN_JUSTIFIED);

        int len = textPane.getDocument().getLength();
        textPane.setCaretPosition(len);
        textPane.setCharacterAttributes(aset, false);
        textPane.replaceSelection(message + "\n");
    }
    
    
    // Public getters and setters
    
    public JTextPane getTextArea() {
        return consoleTextPane;
    }
    
    public String getInputText() {
        return inputTextField.getText();
    }
    
    public void setInputText(String text) {
        inputTextField.setText(text);
    }
    
    public String getIpAddress() {
        return ipTextField.getText();
    }
    
    public int getPort() {
        return Integer.parseInt(portTextField.getText());
    }
    
    public String getPassword() {
        return new String(passwordField.getPassword());
    }
    
    public void printError(String text) {
        appendToPane(consoleTextPane, text, Color.red);
    }
    
    public void printResponse(String text) {
        appendToPane(consoleTextPane, text, Color.orange);
    }
    
    public void printInput(String text) {
        appendToPane(consoleTextPane, text, Color.gray);
    }
    
    public void setToggleConnectButtonText(String text) {
        toggleConnect.setText(text);
    }
}

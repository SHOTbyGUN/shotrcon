package org.shotrcon.client.ui;

import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.DefaultListModel;
import javax.swing.JTextPane;
import javax.swing.text.AttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;

/**
 *
 * @author shotbygun
 */
public abstract class ConsoleUI extends javax.swing.JFrame {

    /**
     * Creates new form ConsoleUI
     */
    public ConsoleUI() {
        initComponents();
        this.setTitle("ShotRcon");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        userPane = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        playerJList = new javax.swing.JList<>();
        userPaneControlPane = new javax.swing.JPanel();
        toBlueButton = new javax.swing.JButton();
        toRedButton = new javax.swing.JButton();
        kickButton = new javax.swing.JButton();
        banButton = new javax.swing.JButton();
        refreshUsersButton = new javax.swing.JButton();
        mapPane = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        mapJList = new javax.swing.JList<>();
        changeMapButton = new javax.swing.JButton();
        midPane = new javax.swing.JPanel();
        botPane = new javax.swing.JPanel();
        inputTextField = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        midMidPane = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        consoleTextPane = new javax.swing.JTextPane();
        topPane = new javax.swing.JPanel();
        ipTextField = new javax.swing.JTextField();
        portTextField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        toggleConnect = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(900, 500));

        userPane.setPreferredSize(new java.awt.Dimension(300, 600));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Players");

        playerJList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(playerJList);

        userPaneControlPane.setPreferredSize(new java.awt.Dimension(143, 100));

        toBlueButton.setText("Blue");
        toBlueButton.setPreferredSize(new java.awt.Dimension(60, 24));
        toBlueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toBlueButtonActionPerformed(evt);
            }
        });
        userPaneControlPane.add(toBlueButton);

        toRedButton.setText("Red");
        toRedButton.setPreferredSize(new java.awt.Dimension(60, 24));
        toRedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toRedButtonActionPerformed(evt);
            }
        });
        userPaneControlPane.add(toRedButton);

        kickButton.setText("Kick");
        kickButton.setPreferredSize(new java.awt.Dimension(60, 24));
        kickButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kickButtonActionPerformed(evt);
            }
        });
        userPaneControlPane.add(kickButton);

        banButton.setText("Ban");
        banButton.setPreferredSize(new java.awt.Dimension(60, 24));
        banButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                banButtonActionPerformed(evt);
            }
        });
        userPaneControlPane.add(banButton);

        refreshUsersButton.setText("Refresh");
        refreshUsersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshUsersButtonActionPerformed(evt);
            }
        });
        userPaneControlPane.add(refreshUsersButton);

        javax.swing.GroupLayout userPaneLayout = new javax.swing.GroupLayout(userPane);
        userPane.setLayout(userPaneLayout);
        userPaneLayout.setHorizontalGroup(
            userPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(userPaneLayout.createSequentialGroup()
                .addComponent(userPaneControlPane, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
                .addContainerGap())
        );
        userPaneLayout.setVerticalGroup(
            userPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPaneLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userPaneControlPane, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Players", userPane);

        mapPane.setPreferredSize(new java.awt.Dimension(200, 400));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Maps");

        mapJList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(mapJList);

        changeMapButton.setText("Change Map");
        changeMapButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeMapButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mapPaneLayout = new javax.swing.GroupLayout(mapPane);
        mapPane.setLayout(mapPaneLayout);
        mapPaneLayout.setHorizontalGroup(
            mapPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(changeMapButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        mapPaneLayout.setVerticalGroup(
            mapPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mapPaneLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(changeMapButton))
        );

        jTabbedPane1.addTab("Maps", mapPane);

        inputTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputTextFieldKeyPressed(evt);
            }
        });

        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout botPaneLayout = new javax.swing.GroupLayout(botPane);
        botPane.setLayout(botPaneLayout);
        botPaneLayout.setHorizontalGroup(
            botPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botPaneLayout.createSequentialGroup()
                .addComponent(inputTextField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sendButton))
        );
        botPaneLayout.setVerticalGroup(
            botPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botPaneLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(botPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendButton))
                .addContainerGap())
        );

        consoleTextPane.setMaximumSize(new java.awt.Dimension(400, 400));
        consoleTextPane.setMinimumSize(new java.awt.Dimension(100, 100));
        consoleTextPane.setPreferredSize(new java.awt.Dimension(300, 300));
        jScrollPane3.setViewportView(consoleTextPane);

        javax.swing.GroupLayout midMidPaneLayout = new javax.swing.GroupLayout(midMidPane);
        midMidPane.setLayout(midMidPaneLayout);
        midMidPaneLayout.setHorizontalGroup(
            midMidPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, midMidPaneLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
                .addContainerGap())
        );
        midMidPaneLayout.setVerticalGroup(
            midMidPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(midMidPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout midPaneLayout = new javax.swing.GroupLayout(midPane);
        midPane.setLayout(midPaneLayout);
        midPaneLayout.setHorizontalGroup(
            midPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(midMidPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(botPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        midPaneLayout.setVerticalGroup(
            midPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(midPaneLayout.createSequentialGroup()
                .addComponent(midMidPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Console", midPane);

        topPane.setMinimumSize(new java.awt.Dimension(400, 30));

        ipTextField.setColumns(10);
        ipTextField.setText("127.0.0.1");
        ipTextField.setToolTipText("");
        ipTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ipTextFieldFocusGained(evt);
            }
        });
        topPane.add(ipTextField);

        portTextField.setColumns(5);
        portTextField.setText("12345");
        portTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                portTextFieldFocusGained(evt);
            }
        });
        topPane.add(portTextField);

        passwordField.setColumns(10);
        passwordField.setText("password");
        passwordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordFieldFocusGained(evt);
            }
        });
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordFieldKeyPressed(evt);
            }
        });
        topPane.add(passwordField);

        toggleConnect.setText("Connect");
        toggleConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleConnectActionPerformed(evt);
            }
        });
        topPane.add(toggleConnect);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addComponent(topPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(topPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        onSend();
    }//GEN-LAST:event_sendButtonActionPerformed

    private void inputTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputTextFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            onSend();
        
        if(evt.getKeyCode() == KeyEvent.VK_UP)
            onUpArrow();
        
        if(evt.getKeyCode() == KeyEvent.VK_DOWN)
            onDownArrow();
    }//GEN-LAST:event_inputTextFieldKeyPressed

    private void toggleConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleConnectActionPerformed
        onToggleConnect();
    }//GEN-LAST:event_toggleConnectActionPerformed

    private void ipTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ipTextFieldFocusGained
        ipTextField.selectAll();
    }//GEN-LAST:event_ipTextFieldFocusGained

    private void portTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_portTextFieldFocusGained
        portTextField.selectAll();
    }//GEN-LAST:event_portTextFieldFocusGained

    private void passwordFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFieldFocusGained
        passwordField.selectAll();
    }//GEN-LAST:event_passwordFieldFocusGained

    private void refreshUsersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshUsersButtonActionPerformed
        onRefreshPlayers();
    }//GEN-LAST:event_refreshUsersButtonActionPerformed

    private void toBlueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toBlueButtonActionPerformed
        onChangeTeamBlue();
    }//GEN-LAST:event_toBlueButtonActionPerformed

    private void toRedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toRedButtonActionPerformed
        onChangeTeamRed();
    }//GEN-LAST:event_toRedButtonActionPerformed

    private void kickButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kickButtonActionPerformed
        onKickPlayer();
    }//GEN-LAST:event_kickButtonActionPerformed

    private void banButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_banButtonActionPerformed
        onBanPlayer();
    }//GEN-LAST:event_banButtonActionPerformed

    private void changeMapButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeMapButtonActionPerformed
        onChangeMap();
    }//GEN-LAST:event_changeMapButtonActionPerformed

    private void passwordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            onToggleConnect();
    }//GEN-LAST:event_passwordFieldKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton banButton;
    private javax.swing.JPanel botPane;
    private javax.swing.JButton changeMapButton;
    private javax.swing.JTextPane consoleTextPane;
    private javax.swing.JTextField inputTextField;
    private javax.swing.JTextField ipTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton kickButton;
    private javax.swing.JList<String> mapJList;
    private javax.swing.JPanel mapPane;
    private javax.swing.JPanel midMidPane;
    private javax.swing.JPanel midPane;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JList<String> playerJList;
    private javax.swing.JTextField portTextField;
    private javax.swing.JButton refreshUsersButton;
    private javax.swing.JButton sendButton;
    private javax.swing.JButton toBlueButton;
    private javax.swing.JButton toRedButton;
    private javax.swing.JButton toggleConnect;
    private javax.swing.JPanel topPane;
    private javax.swing.JPanel userPane;
    private javax.swing.JPanel userPaneControlPane;
    // End of variables declaration//GEN-END:variables

    
    // Events to implement
    protected abstract void onSend();
    protected abstract void onToggleConnect();
    protected abstract void onUpArrow();
    protected abstract void onDownArrow();
    protected abstract void onRefreshPlayers();
    protected abstract void onChangeMap();
    protected abstract void onKickPlayer();
    protected abstract void onBanPlayer();
    protected abstract void onChangeTeamBlue();
    protected abstract void onChangeTeamRed();
    
    
    
    /**
     * Created by nice cow http://stackoverflow.com/users/1057230/nice-cow
     * source http://stackoverflow.com/a/9652143/1362478
     * @param textPane 
     * @param message
     * @param color 
     */
    protected void appendToPane(JTextPane textPane, String message, Color color) {
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, color);

        aset = sc.addAttribute(aset, StyleConstants.FontFamily, "Lucida Console");
        aset = sc.addAttribute(aset, StyleConstants.Alignment, StyleConstants.ALIGN_JUSTIFIED);

        int len = textPane.getDocument().getLength();
        textPane.setCaretPosition(len);
        textPane.setCharacterAttributes(aset, false);
        textPane.replaceSelection(message + "\n");
    }
    
    
    // Public getters and setters
    
    public JTextPane getTextArea() {
        return consoleTextPane;
    }
    
    public String getInputText() {
        return inputTextField.getText();
    }
    
    public void setInputText(String text) {
        inputTextField.setText(text);
    }
    
    public String getIpAddress() {
        return ipTextField.getText();
    }
    
    public int getPort() {
        return Integer.parseInt(portTextField.getText());
    }
    
    public String getPassword() {
        return new String(passwordField.getPassword());
    }
    
    public void printError(String text) {
        appendToPane(consoleTextPane, text, Color.red);
    }
    
    public void printResponse(String text) {
        appendToPane(consoleTextPane, text, Color.orange);
    }
    
    public void printInput(String text) {
        appendToPane(consoleTextPane, text, Color.gray);
    }
    
    public void setToggleConnectButtonText(String text) {
        toggleConnect.setText(text);
    }
    
    public String getSelectedPlayer() {
        return playerJList.getSelectedValue();
    }
    
    public void setPlayerList(String[] playerListArray) {
        DefaultListModel<String> model = new DefaultListModel<>();
        for(int i = 0; i < playerListArray.length; i++) {
            model.add(i, playerListArray[i]);
        }
        playerJList.setModel(model);
        playerJList.clearSelection();
    }
    
    public int getSelectedMap() {
        return mapJList.getSelectedIndex();
    }
    
    public void setMapList(String[] mapNameArray) {
        DefaultListModel<String> model = new DefaultListModel<>();
        for(int i = 0; i < mapNameArray.length; i++) {
            model.add(i, mapNameArray[i]);
        }
        mapJList.setModel(model);
        mapJList.clearSelection();
    }
}
